// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicaManager.Infra.Database;

#nullable disable

namespace TicaManager.Infra.Migrations
{
    [DbContext(typeof(TicaContext))]
    partial class TicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicaManager.Domain.Entities.Audit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Action");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("Date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("EmployeeId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Audit_EmployeeId")
                        .IsUnique();

                    b.ToTable("Audit", (string)null);
                });

            modelBuilder.Entity("TicaManager.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "TicaManager.Domain.Entities.Employee.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<bool>("IsValid")
                                .HasColumnType("bit");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Name");
                        });

                    b.HasKey("Id");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("TicaManager.Domain.Entities.Audit", b =>
                {
                    b.HasOne("TicaManager.Domain.Entities.Employee", "Employee")
                        .WithMany("Audits")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Audit");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TicaManager.Domain.Entities.Employee", b =>
                {
                    b.OwnsOne("TicaManager.Domain.ValueObjects.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<string>("EmployeeId")
                                .HasColumnType("VARCHAR(50)");

                            b1.Property<bool>("IsValid")
                                .HasColumnType("bit");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Cpf");

                            b1.HasKey("EmployeeId");

                            b1.HasIndex("Number")
                                .HasDatabaseName("IX_Employee_Cpf");

                            b1.ToTable("Employee");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("TicaManager.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<string>("EmployeeId")
                                .HasColumnType("VARCHAR(50)");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Email");

                            b1.Property<bool>("IsValid")
                                .HasColumnType("bit");

                            b1.HasKey("EmployeeId");

                            b1.HasIndex("Address")
                                .HasDatabaseName("IX_Employee_Email");

                            b1.ToTable("Employee");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Cpf")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("TicaManager.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Audits");
                });
#pragma warning restore 612, 618
        }
    }
}
